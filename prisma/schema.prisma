// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ApplicationStatus {
  APPLIED
  REJECTED
  ACCEPTED
}

model users {
  id         Int       @id @default(autoincrement())
  user_id    String    @db.Uuid
  full_name  String    @db.VarChar(256)
  email      String    @unique
  password   String    @db.Text
  birth_date DateTime? @db.Timestamp()
  phone      String?   @db.Text
  gender     String?   @db.Text
  avatar     String?   @db.Text
  role       Role      @default(USER)
  created_at DateTime  @default(now()) @db.Timestamp()
  updated_at DateTime  @db.Timestamp()
}

model candidate_education {
  id         Int      @id @default(autoincrement())
  user_id    String   @db.Uuid
  level      String   @db.Text
  school     String   @db.Text
  major      String   @db.Text
  gpa        String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @db.Timestamp()
}

model candidate_social {
  id           Int      @id @default(autoincrement())
  user_id      String   @db.Uuid
  linkedin_url String?  @db.Text
  created_at   DateTime @default(now()) @db.Timestamp()
  updated_at   DateTime @db.Timestamp()
}

model candidate_cv {
  id         Int      @id @default(autoincrement())
  user_id    String   @db.Uuid
  cv_url     String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @db.Timestamp()
}

model job_categories {
  id          Int      @id @default(autoincrement())
  category_id String   @unique @db.Uuid
  name        String   @db.Text
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @db.Timestamp()
}

model jobs {
  id            Int      @id @default(autoincrement())
  job_id        String   @db.Uuid
  title         String   @db.Text
  description   String   @db.Text
  employee_type String   @db.Text
  category_id   String   @db.Uuid
  is_active     Boolean  @default(true)
  deadline      DateTime @db.Timestamp()
  created_at    DateTime @default(now()) @db.Timestamp()
  updated_at    DateTime @db.Timestamp()
}

model job_application {
  id         Int               @id @default(autoincrement())
  user_id    String            @db.Uuid
  job_id     String            @db.Uuid
  status     ApplicationStatus @default(APPLIED)
  is_applied Boolean           @default(true)
  created_at DateTime          @default(now()) @db.Timestamp()
  updated_at DateTime          @db.Timestamp()
}
